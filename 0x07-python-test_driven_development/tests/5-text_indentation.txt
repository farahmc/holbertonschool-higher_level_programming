==========================
The ``text_indentation`` module
==========================

This module defines a function that prints 2 new lines following every
instance of the characters . ? and :.

Using ``text_indentation``
---------------------
``text_indentation(text)`` prints a string, adding a new line after every
instance of . ? and :. The string itself does not end with a new line.

Import module:
        >>> text_indentation = __import__('5-text_indentation').text_indentation

Testing:

The function will only take a string as an argument to succeed.

	>>> text_indentation("Hello. World: Is Anyone There?")
	Hello.
	<BLANKLINE>
	World:
	<BLANKLINE>
	Is Anyone There?
	<BLANKLINE>

	>>> text_indentation("Hello")
	Hello

	>>> text_indentation("123456?")
	123456?
	<BLANKLINE>


Leading and trailing whitespaces are stripped.

	>>> text_indentation("     Hello world   ")
	Hello world


A ValueError is raised if an empty string is passed.

	>>> text_indentation("")
	Traceback (most recent call last):
	...
	ValueError: string cannot be empty


A TypeError is raised if anything other than a string is passed.

	>>> text_indentation(3)
	Traceback (most recent call last):
	...
	TypeError: text must be a string

	>>> text_indentation(["Hello?", "World"])
	Traceback (most recent call last):
	...
	TypeError: text must be a string


A TypeError is raised if the wrong number of arguments are given.

	>>> text_indentation()
	Traceback (most recent call last):
    	...
	TypeError: text_indentation() missing 1 required positional argument: 'text'

	>>> text_indentation("Hello?", "World?")
	Traceback (most recent call last):
    	...
	TypeError: text_indentation() takes 1 positional argument but 2 were given
